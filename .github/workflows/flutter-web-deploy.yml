name: Build and Deploy Flutter App

on:
  push:
    branches:
      - [main, sign-android-build] # Change this to your default branch if it's different
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.2' # Set this to the desired Flutter version

    - name: Install dependencies
      run: flutter pub get

    - name: Build Flutter web app
      run: flutter build web --release --base-href "/flutter-word-game/"

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: build/web

    - name: Build Android APK
      run: flutter build apk --release

    - name: Decode keystore file
      run: echo ${{ secrets.KEYSTORE_BASE64 }} | base64 --decode > android/keystore/key.jks

    - name: Sign the APK
      run: |
        jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 -keystore keystore/key.jks \
        -storepass ${{ secrets.KEY_PASSWORD }} -keypass ${{ secrets.KEY_PASSWORD }} \
        -storetype pkcs12 \
        build/app/outputs/flutter-apk/app-release-unsigned.apk ${{ secrets.KEY_ALIAS }}

    - name: Verify the signature
      run: jarsigner -verify build/app/outputs/flutter-apk/app-release-unsigned.apk

    - name: Align the APK
      run: ${ANDROID_HOME}/build-tools/29.0.2/zipalign -v 4 build/app/outputs/flutter-apk/app-release-unsigned.apk build/app/outputs/flutter-apk/app-release.apk

    - name: Upload Android APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/app-release.apk

  windows-build:
    runs-on: windows-latest

    steps:    
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.2' # Set this to the desired Flutter version

    - name: Install dependencies
      run: flutter pub get
      working-directory: ${{ github.workspace }}

    - name: Build Windows binary
      run: flutter build windows --release
      working-directory: ${{ github.workspace }}

    - name: Compress build output
      run: |
        powershell Compress-Archive -Path $env:GITHUB_WORKSPACE\build\windows\x64\runner\Release\* -DestinationPath $env:RUNNER_TEMP\windows-build.zip
      env:
        RUNNER_TEMP: ${{ runner.temp }}
        GITHUB_WORKSPACE: ${{ github.workspace }}

    - name: Upload Windows build artifact 
      uses: actions/upload-artifact@v4
      with:
        name: windows-binary
        path: ${{ runner.temp }}\windows-build.zip

  attach-release:
    runs-on: ubuntu-latest
    needs: [windows-build, build]
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download Windows build artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-binary
        path: ./release/windows

    - name: Download Android APK artifact
      uses: actions/download-artifact@v4
      with:
        name: android-apk
        path: ./release/android

    - name: Get the latest release
      id: get_release
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { data: latestRelease } = await github.rest.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          return latestRelease;

    - name: Publish Windows build
      run: gh release upload "${{ github.ref_name }}" "./release/windows/windows-build.zip" --clobber
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish Android APK
      run: gh release upload "${{ github.ref_name }}" "./release/android/app-release.apk" --clobber
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
